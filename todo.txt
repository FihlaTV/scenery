

Bugs:

Incomplete:
    Flesh out Shape, with decomposition, bounds, hit regions (including strokes), etc.
    Flags for whether text / strokes are considered for hit regions
    Investigate getImageData for fonts (both hit regions and bounds)
    How to handle the mutable transforms and paint-invalidation / events?
        * increment transform ID and check?
        * getTransform() with a delegate?
    Visibility interaction with dirty paint / bounds, and events based on that
        * revert to setter/getter ?
        * Scene.updateLayer handling
    Don't send mark updates on invisible layers? Visibility change causes repaint?

Performance:
    Dirty regions
    Caching nodes with off-screen canvases for performance
    Combining fills and strokes (or other state optimization -- fills require ensuring CCW/CW stays the same, so we need flags to whitelist)
    Automated benchmarks
    Investigate whether bounding boxes can be smaller based on clip shapes
    Non-automated performance tests:
        * Compare Matrix3 Float32Array v. Array (Array seems slightly faster possibly?)
        * Consider a Canvas 2D context delegate to examine drawing calls for Easel / Scene / Custom / etc.

Features:
    * User interaction
    Accessibility and shadow DOM see html5 scene graph google doc
    Retina-screen handling
    "Lifting" of DOM nodes to top layer if selected
    AnimateTo-style animation
    Clipping => Dead region handling (clipping needs to be stored in a shape array since it can only be intersected or reset in Canvas)

Cleanliness / Debugging:
    Ability to create a debugging dump of scene graph
    Unit tests using canvas pixel querying

Other:
    Implement Bouncy example from the wishlist
    Ability to update size of canvas, etc.
    Report rgba alpha precision "bug" - spec says rgba(255,255,255,0.1112049520495820495802495) should not lose any digits on inspection after setting on context
    Highlighting and indexing of TODO items
